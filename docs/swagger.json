{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Students app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of students app\n"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Product",
      "description": "Operations about product."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product by id",
        "operationId": "getProduct",
        "description": "Get product by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "name"
            },
            "description": "All products's fields can be mentioned. Default value - name"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get product by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found student with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/product"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "product": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "price"
        ],
        "properties": {
          "_id": {
            "description": "Product's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Product's name",
            "type": "string",
            "example": "John Doe"
          },
          "price": {
            "description": "Product's price",
            "type": "number",
            "example": 12
          },
          "category": {
            "description": "Product's category",
            "type": "string",
            "enum": [
              "books",
              "electronics",
              "clothing",
              "other"
            ]
          },
          "description": {
            "description": "Product's description",
            "type": "string",
            "example": "Some description"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}